package fr.unice.polytech.si3.qgl.iaac.ground;

import fr.unice.polytech.si3.qgl.iaac.contracts.Contract;
import fr.unice.polytech.si3.qgl.iaac.contracts.Contracts;
import fr.unice.polytech.si3.qgl.iaac.ReadJSON;
import fr.unice.polytech.si3.qgl.iaac.map.Carte;
import fr.unice.polytech.si3.qgl.iaac.contracts.SecondaryContract;
import fr.unice.polytech.si3.qgl.iaac.resources.EnumManufacturedResources;

/**
 * Created by sebde on 24/02/2017.
 */
public class ExploitSecond implements State{
    private Contract contract;
    private Contracts contracts;
    private int numeroRessource=0;

    public ExploitSecond(int numeroRessource){
        this.numeroRessource=numeroRessource;
    }

    @Override
    public String execute(Men men, Contracts contracts, Carte carte) {
        this.contracts = contracts;
        contract =  contracts.getSecondaryContract();
        return men.exploit(((EnumManufacturedResources)contracts.getSecondaryContract().getName()).getNeeded().get(numeroRessource));
    }

    @Override
    public State wait(ReadJSON json) {
        if(numeroRessource==0) {
            ((SecondaryContract) contract).addFirstRessource(json.getCollect());
            if(((SecondaryContract) contract).isFirstPrimaryCompleted()){
                if(((SecondaryContract) contract).getNbPrimaryRessources()==1){
                    return new TransformSecond();
                }
                else return new DefineWaySecond(1);
            }
            else return new DefineWaySecond(0);

        }
        else {
            ((SecondaryContract)contract).addSecondaryRessource(json.getCollect());
            if(((SecondaryContract) contract).isSecondaryPrimaryCompleted()){
                return new TransformSecond();
            }
            else return new DefineWaySecond(1);
        }
    }
}
